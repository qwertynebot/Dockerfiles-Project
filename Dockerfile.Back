# 1. Вказуємо базовий образ для .NET SDK (необхідний для збірки проєкту)
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build

# 2. Встановлюємо робочу директорію в контейнері
WORKDIR /app

# 3. Копіюємо всі необхідні файли проекту
COPY *.sln ./
COPY Facebook_Api/Facebook_Api.csproj ./Facebook_Api/
COPY Facebook_Application/Facebook_Application.csproj ./Facebook_Application/
COPY Facebook_Contracts/Facebook_Contracts.csproj ./Facebook_Contracts/
COPY Facebook_Domain/Facebook_Domain.csproj ./Facebook_Domain/
COPY Facebook_Infrastructure/Facebook_Infrastructure.csproj ./Facebook_Infrastructure/

# 4. Відновлюємо залежності
RUN dotnet restore

# 5. Копіюємо решту файлів проекту
COPY . .

# 6. Створюємо production-збірку
WORKDIR /app/Facebook_Api
RUN dotnet publish -c Release -o /app/publish

# 7. Використовуємо легкий образ для запуску додатку
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS runtime

# 8. Встановлюємо робочу директорію для runtime
WORKDIR /app

# 9. Копіюємо згенеровану збірку з попереднього кроку
COPY --from=build /app/publish .

# Додаємо копіювання статичних файлів, таких як зображення та email-шаблони
COPY Facebook_Api/images /app/images
COPY Facebook_Api/EmailTemplates /app/EmailTemplates

# 10. Відкриваємо порт для HTTP-запитів
EXPOSE 5181

# 11. Змінна оточення для Production
ENV ASPNETCORE_ENVIRONMENT=Production

# 12. Виконуємо міграції бази даних перед запуском
# CMD виконується після ENTRYPOINT і запускає міграцію та запуск програми
ENTRYPOINT ["dotnet", "Facebook_Api.dll"]

# Міграція бази даних перед запуском програми
CMD ["dotnet", "ef", "database", "update", "--no-build", "--project", "Facebook_Api/Facebook_Api.csproj"]
